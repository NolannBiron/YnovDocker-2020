body, html{
    height: 100%;
    width: 100%;
    margin: 0;
    padding: 0;
    font-family: "Open Sans";
}

.header{
    background: #0F4C81;
}

h1{
    font-size: 30px;
}

.todoWrapper{
    background: #031E36;
    border-radius: 10px;
    color: white;
    padding: 15px 20px;
    margin-bottom: 50px;
    position: relative;
    box-shadow: 0px 0px 0px #333333;
}

.taskExpandWrapper{
    position: absolute;
    width: 100%;
    display: block;
    bottom: 0;
    margin: 0 -20px;
}

.taskExpandWrapper > button{
    top: 50%;
    position: absolute;
    transform: translate(-50%, -50%);
    left: 50%;
    width: 50px;
    height: 50px;
    background: #0e793b;
    border-radius: 100%;
    border: 0;
    box-shadow: 0px 0px 10px #000000;
}

.taskList{
    padding-left: 0;
    list-style: none;
}

.taskLimitItem{
    border-bottom: solid 1px #4e4e4e;
}

.collapseTask{
    transition: ease 2s;
}


input.inputTask{
    font-size: 16px;
}

input.mainInput{
    padding: 30px;
    border-radius: 50px;
    font-size: 24px;
    box-shadow: 0px 2px 0px #333;
}




input[type="radio"],
 input[type="checkbox"] {
     box-sizing: border-box;
     padding: 0
 }

 li.completed > .taskTitles > label{
        position: relative;

 }

 li.completed > .taskTitles > label::after{
    content: '';
    border-bottom: 2px solid white;
    position: absolute;
    left: 0;
    top: 50%;
    transform: translateY(-25%);
    width: 100%;
}

 .taskTitles label{
    font-size: 16px;
 }




 .checkbox {
    --background: #fff;
    --border: #d1d6ee;
    --border-hover: #bbc1e1;
    --border-active: #1e2235;
    --tick: #fff;
    position: relative;
  }
  .checkbox input,
  .checkbox svg {
    width: 21px;
    height: 21px;
    display: block;
  }
  .checkbox input {
    -webkit-appearance: none;
    -moz-appearance: none;
    position: relative;
    outline: none;
    background: var(--background);
    border: none;
    margin: 0;
    padding: 0;
    cursor: pointer;
    border-radius: 4px;
    -webkit-transition: box-shadow 0.3s;
    transition: box-shadow 0.3s;
    box-shadow: inset 0 0 0 var(--s, 1px) var(--b, var(--border));
  }
  .checkbox input:hover {
    --s: 2px;
    --b: var(--border-hover);
  }
  .checkbox input:checked {
    --b: var(--border-active);
  }
  .checkbox svg {
    pointer-events: none;
    fill: none;
    stroke-width: 2px;
    stroke-linecap: round;
    stroke-linejoin: round;
    stroke: var(--stroke, var(--border-active));
    position: absolute;
    top: 0;
    left: 0;
    width: 21px;
    height: 21px;
    -webkit-transform: scale(var(--scale, 1)) translateZ(0);
            transform: scale(var(--scale, 1)) translateZ(0);
  }
  .checkbox.path input:checked {
    --s: 2px;
    -webkit-transition-delay: 0.4s;
            transition-delay: 0.4s;
  }
  .checkbox.path input:checked + svg {
    --a: 16.1 86.12;
    --o: 102.22;
  }
  .checkbox.path svg {
    stroke-dasharray: var(--a, 86.12);
    stroke-dashoffset: var(--o, 86.12);
    -webkit-transition: stroke-dasharray 0.6s, stroke-dashoffset 0.6s;
    transition: stroke-dasharray 0.6s, stroke-dashoffset 0.6s;
  }
  .checkbox.bounce {
    --stroke: var(--tick);
  }
  .checkbox.bounce input:checked {
    --s: 11px;
  }
  .checkbox.bounce input:checked + svg {
    -webkit-animation: bounce 0.4s linear forwards 0.2s;
            animation: bounce 0.4s linear forwards 0.2s;
  }
  .checkbox.bounce svg {
    --scale: 0;
  }
  
  @-webkit-keyframes bounce {
    50% {
      -webkit-transform: scale(1.2);
              transform: scale(1.2);
    }
    75% {
      -webkit-transform: scale(0.9);
              transform: scale(0.9);
    }
    100% {
      -webkit-transform: scale(1);
              transform: scale(1);
    }
  }
  
  @keyframes bounce {
    50% {
      -webkit-transform: scale(1.2);
              transform: scale(1.2);
    }
    75% {
      -webkit-transform: scale(0.9);
              transform: scale(0.9);
    }
    100% {
      -webkit-transform: scale(1);
              transform: scale(1);
    }
  }
  html {
    box-sizing: border-box;
    -webkit-font-smoothing: antialiased;
  }